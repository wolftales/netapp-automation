###
# StorageGRID: Tenant User Management
# Description:
# Creates / Modifies / Deletes both administrative & end-user accounts
# 
# Requirements:
#  - Tenant Administrator - Can't be  done by normal user
#  - Tenant Account ID
#  - tenant user name & access_key required for deletion
#  - 
#  - 
#  - 
###
---
- name: "StorageGRID: Tenant User Management"
  hosts: localhost
  gather_facts: false
  collections:
    - netapp.storagegrid

  vars_files:
    # - vars/vars_sg_exampleLab.yml
    # - vars/vars_sg_tenant_creds.yml
    # - vars/vars_sg_tenant_users.yml
    - vars/vars_sg_tenant_appid01.yml

  vars:
    state:            present
    grid:
      api_base_url:   https://192.168.7.215
      # admin_username: root
      # admin_passwd:   netapp1234
    tenant:
      name:           AppID01
      tenant.id:      '38493884429242321796'  # Enter account_id if not looking up byname && find_tenant_id == false
 
    # find_tenant_id:   false  # Set to true to enable tenant_id lookup byname
       
    ###
    # Authentication Bearer Tokens 
    # Grid Authorization Token
    # grid_auth: &grid_auth
    #   api_url:        "{{ grid.api_base_url }}"
    #   auth_token:     "{{ auth_response.json.data }}"
    #   validate_certs: false
    # Tenant Authorization Token
    tenant_auth: &org_auth
      api_url:        "{{ grid.api_base_url }}"
      auth_token:     "{{ tenant_auth_response.json.data }}"
      validate_certs: false

  tasks:

    ###
    # Tenant Authorization Token
    - name: Get Tenant Administrator user authorization token
      uri:
        url: "{{ api_base_url }}/api/v3/authorize"
        method: POST
        validate_certs: false
        body_format: json
        body:
          {
            "accountId":  "{{ tenant.id }}",
            "username":   "{{ tenant.admin_username }}",
            "password":   "{{ tenant.admin_passwd }}",
            "cookie":     false,
            "csrfToken":  false,
          }
      register: tenant_auth_response

    ###
    # Debug: Test ORG-AUTH & ORG-INFO is working
    ###
    # # ORG-INFO - ALL
    # - name: Get ORG Info
    #   netapp.storagegrid.na_sg_org_info:
    #     gather_subset:
    #       - all
    #     <<: *org_auth
    #   register: grid_info_results

    # # DEBUG: PPrint ORG-INFO Response
    # - name: Print GRID Response
    #   debug:
    #     var: grid_info_results

    ###
    # ASDF
    - name: Create Multiple Tenant users
      netapp.storagegrid.na_sg_org_user:
        <<: *org_auth

        state:            "{{ state }}"
        full_name:        "{{ item.user }}"
        unique_name:      "user/{{ item.full_name }}"
        password:         "{{ item.user_passwd }}"
        update_password:  "{{ item.update_password }}" # Default: on_create
        disable:          "{{ item.disable }}"
        member_of:        "group/{{ tenant.name }}"

      with_items:         "{{ tenant.user_list }}"
      no_log: false
      when: tenant.user_list is Defined and tenant.user_list is not None
    
    - name: Create a Single Tenant user
      netapp.storagegrid.na_sg_org_user:
        <<: *org_auth

        state:            "{{ state }}"
        full_name:        "{{ tenant.user }}"
        unique_name:      "user/{{ tenant.full_name }}"
        password:         "{{ tenant.user_passwd }}"
        update_password:  "{{ tenant.update_password }}" # Default: on_create
        disable:          "{{ tenant.disable }}"
        member_of:        "group/{{ tenant.name }}"

      with_items:         "{{ tenant.user }}"
      no_log: false
      when: tenant.user_list is not Defined and tenant.user_list is None