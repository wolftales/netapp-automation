###
# StorageGRID: Tenant Management
# Description:
# Creates / Modifies / Deletes Tenants
# 
# Requirements:
#  - Grid Administrator
#  - Tenant Administrator - Updates Can't be done by a normal tenant user
#  - Tenant Account ID (Optional) - Can lookup Teant account_id byname
#  - tenant user name & access_key required for deletion
#  - Delete requires all containers to be removed before the tenant can be deleted
#  - 
###
---
- hosts: localhost
  name: "GRID: Tenant Management"
  gather_facts: false
  collections:
    - netapp.storagegrid
  vars_files:
    # - vars/vars_sg_exampleLab.yml
    - vars/vars_sg_tenant_appid01.yml
  vars:
    state:            present
    grid:
      api_base_url:   https://192.168.7.215
      admin_username: root
      admin_passwd:   netapp1234
    tenant:
      name:           AppID01
    tenant_id:              # Enter account_id if not looking up byname
    find_tenant_id:   true  # Set to true to enable tenant_id lookup byname
    grid_auth: &grid_auth
      api_url:        "{{ grid.api_base_url }}"
      auth_token:     "{{ auth_response.json.data }}"
      validate_certs: false
    tenant_auth: &org_auth
      api_url:        "{{ grid.api_base_url }}"
      auth_token:     "{{ tenant_auth_response.json.data }}"
      validate_certs: false


  tasks:
  ###
  # GRID API Authorization Token
    - name: Get GRID authorization token
      uri:
        url: "{{ grid.api_base_url }}/api/v3/authorize"
        method: POST
        validate_certs: false
        body_format: json
        body:
          {
            "username": "{{ grid.admin_username }}",
            "password": "{{ grid.admin_passwd }}",
            "cookie": false,
            "csrfToken": false,
          }
      register: auth_response


    ###
    # GRID: Create tenant
    - name: Create a StorageGRID Tenant Account
      netapp.storagegrid.na_sg_grid_account:
        <<: *grid_auth

        state:            "{{ state }}"
        name:             "{{ tenant.name }}"
        password:         "{{ tenant.admin_passwd }}"

        protocol:         "{{ tenant.protocol | default('s3') }}"
        management:       "{{ tenant.management | default('true') }}"  # Default: true - Tenant account can login to tenant portal
        quota_size:       "{{ tenant.quota_size | default('0') }}"  # Defaults to '0'
        quota_size_unit:  "{{ tenant.quota_size_unit | default('gb') }}"  # Defaults to 'gb'
        update_password:  on_create # Default: on_create
        allow_platform_services: "{{ tenant.allow_platform_services | default('false') }}"
        use_own_identity_source: "{{ tenant.use_own_identity_source | default('false') }}"
      register: account
      # when: state == 'present'

  ###
  # Lookup Tenant account_id - set find_account_id to `true` 
    - name: Lookup Tenant account_id byname
      block:

    ###
    # GRID INFO Collection
      - name: Get Grid INFO
        netapp.storagegrid.na_sg_grid_info:
          <<: *grid_auth
          gather_subset:
            # - all
            - grid/accounts
        register: grid_info_results

    ###
    # Debug: Print GRID-INFO Response
      # - name: Print GRID-INFO Response
      #   debug:
      #     var: grid_info_results

    ###
    # Debug: Print Tenant Account ID Byname
      # - name: "Print Tenant ID for {{ tenant.name }}"
      #   debug:
      #     msg:
      #       - "Tenant Name: {{ item.name }} Tenant ID: {{ item.id }}"
      #   with_items:
      #     - "{{ grid_info_results.sg_info['grid/accounts'].data }}"
      #   when: item.name == tenant.name

      - name: Set_Fact - tenant_id
        set_fact:
          tenant_id: "{{ item.id }}"
        with_items:
          - "{{ grid_info_results.sg_info['grid/accounts'].data }}"
        when: item.name == tenant.name

    ###
    # Debug: Print varible value
      - name: 'DEBUG: Print Varible: tenant_id'
        debug:
          msg: "from set_fact: {{ tenant_id }}"

      when: find_tenant_id is true 

    ###
    # Tenant Authorization Token
    - name: Get Tenant Administrator user authorization token
      uri:
        url: "{{ grid.api_base_url }}/api/v3/authorize"
        method: POST
        validate_certs: false
        body_format: json
        body:
          {
            "accountId": "{{ tenant_id }}",
            "username": "{{ tenant.admin_username }}",
            "password": "{{ tenant.admin_passwd }}",
            "cookie": false,
            "csrfToken": false,
          }
      register: tenant_auth_response

    ###
    # Debug: Test ORG-AUTH & ORG-INFO is working
    ###
    # # ORG-INFO - ALL
    # - name: Get ORG Info
    #   netapp.storagegrid.na_sg_org_info:
    #     gather_subset:
    #       - all
    #     <<: *org_auth
    #   register: grid_info_results

    # # DEBUG: Print ORG-INFO Response
    # - name: Print GRID Response
    #   debug:
    #     var: grid_info_results

