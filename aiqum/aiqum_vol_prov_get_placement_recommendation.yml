---
- hosts: localhost
  name: AIQUM Get Placement Recommendation
  gather_facts: no
  collections:
    - netapp.ontap

  vars:
    # Basic Provisioning details
    # vserver_name:       "destination"           # Primary SVM
    service_level_name: "Value"                 # Storage Performance Service Level
    # vol_name:           "aiqum_test_nfs_03"     # Volume name
    # vol_type:           dp                      # Used to create destination SM vol
    size:               1                       # In GB
    convert:            "{{ size * 1073741824 }}"  # volume size * 1 GB = 1073741824 B
    capacity:           "{{ convert }}"         # volume size in bytes 1 GB = 1073741824 B
    # auto_size:          grow_shrink             # off, grow, or grow_shrink

  vars_files:
  - ../vars/vars_aiqum.yml

  tasks:

  - name: AIQUM Get Datacenter Performance Service Level UUID(s)
    uri:
      method: GET
      url: "{{ aiqum.api_endpoint }}/datacenter/svm/svms"
      return_content: yes
      headers:
        accept: application/json
      url_username: "{{ aiqum.username }}"
      url_password: "{{ aiqum.password }}"
      validate_certs: false
      force_basic_auth: yes
    register: svm_json_response
  
   # DEBUG - Display ALL Output for development
  # - debug:
  #     msg:
  #       - "{{ svm_json_response.json.records }}"
  #   name: 'Display ALL Output for development'

  # - debug:
  #     msg:
  #       - "{{ item.name }}"
  #   name: 'Display ALL Output for development'
  #   loop: "{{ svm_json_response.json.records }}"
  #   loop_control:
  #     label: ""
  #   when: item.name != {{ cluster }}

  # - name: Just the Names
  #   debug: msg="{{ svm_json_response.json | json_query(jmesquery) }}"
  #   vars:
  #     jmesquery: "[*].name"

  # DEBUG - Display ALL Output for development
  # - debug:
  #     msg:
  #       - "{{ item }}"
  #   name: 'Display ALL Output for development'
  #   loop: "{{ svm_json_response.json.records | community.general.json_query('[?type=='data']') }}"
  #   loop_control:
  #       label: "{{ item.name }}"

  # - name: Set SVM name
  #   set_fact:
  #     svm_name: "{{ item.name }}"
  #   loop: "{{ svm_json_response.json.records }}"
  #   when:
  #     - item.name == vserver_name

  # - name: Set SVM key
  #   set_fact:
  #     svm_key: "{{ item.key }}"
  #   loop: "{{ json_response.json.records }}"
  #   when:
  #     - item.name == vserver_name

  - name: AIQUM Get Performance Service Levels
    uri:
      method: GET
      url: "{{ aiqum.api_endpoint }}/storage-provider/performance-service-levels"
      return_content: yes
      headers:
        accept: application/json
      url_username: "{{ aiqum.username }}"
      url_password: "{{ aiqum.password }}"
      validate_certs: false
      force_basic_auth: yes
    register: json_response

  - name: Set Performance Service Level key
    set_fact:
      service_level_key: "{{ item.key }}"
    loop: "{{ json_response.json.records }}"
    when:
      - item.name == service_level_name

  #  DEBUG - Display ALL Output for development
  # - debug:
  #     msg:
  #       {
  #         "Volume Capacity in GByte":   "{{ size }}",
  #         "Volume Capacity in Byte":    "{{ capacity }}",
  #         "PSL Name":                   "{{ service_level_name }}",
  #         "PSL UUID":                   "{{ service_level_key }}"
  #       }
  #   name: 'DEBUG - Display ALL Output for development'

  # - name: AIQUM Provision - GET Placement Recommendation
  #   uri:
  #     method: GET
  #     url: "{{ aiqum.api_endpoint }}/datacenter/storage/data-placement"
  #     return_content: yes
  #     body:
  #       name: "{{ vol_name }}"
  #       performance_service_level:
  #         key: "{{ service_level_key }}"
  #       space:
  #         size: "{{ capacity }}"
  #       type: "{{ vol_type }}"
  #       svm:
  #         key: "{{ svm_key }}"
  #     body_format: json
  #     force_basic_auth: yes
  #     validate_certs: false
  #     url_username: "{{ aiqum.username }}"
  #     url_password: "{{ aiqum.password }}"
  #     headers:
  #       Accept: application/json
  #     status_code: 202
  #   register: json_response

  # - name: API cURLified task (curl)
  #   command: >-
  #     curl -k -o output-curl1.json 
  #     -u "admin:netapp1234"
  #     --header "Content-Type: application/json"
  #     --request GET
  #     --data '{ "capacity":"1000000000", "performance_service_level_uuid" : {{ service_level_key }} }'
  #     "{{ aiqum.api_endpoint }}/datacenter/storage/data-placement"
  #   register: json_response

  # - name: API cURLified task (curl)
  #   command: >-
  #     curl -k -o output-curl1.json 
  #     --request GET
  #     -u "admin:netapp1234"
  #     --header "Content-Type: application/json"
  #     --header "Accept: application/json"
  #     --data '{ 'q': ["capacity": "10000", "performance_service_level_uuid": "{{ service_level_key }}"] }'
  #     "{{ aiqum.api_endpoint }}/datacenter/storage/data-placement"
  #   register: json_response

##
# "{{ aiqum.api_endpoint }}/datacenter/storage/data-placement?capacity={{ capacity }}&performance_service_level_uuid={{ service_level_key }}"
#  --data '{ "method": "get",}'
##

  - name: AIQUM Provision - GET Placement Recommendation
    uri:
      method: GET
      # url: "{{ aiqum.api_endpoint }}/datacenter/storage/data-placement"  # GET doesn't support query paramters in the body
      url: "{{ aiqum.api_endpoint }}/datacenter/storage/data-placement?capacity={{ capacity }}&performance_service_level_uuid={{ service_level_key }}"
      force_basic_auth: yes
      url_username: "{{ aiqum.username }}"
      url_password: "{{ aiqum.password }}"
      validate_certs: false
      headers:
        Accept: application/json
      status_code: 200
      return_content: yes

    register: json_response

# DEBUG - Display ALL Output for development
  # - debug:
  #     msg:
  #       - "{{ json_response.json }}"
  #   name: 'Display ALL Output for development'

 # Display Provisioning Placement Informaiton from a given Capacity & Performance Service Level (PSL)
  - debug:
      msg:
        {
          "Target Cluster Name":                  "{{ json_response.json.cluster.name }}",
          "Target cluster_mgmt hostname or IP":   "{{ json_response.json.cluster.name }}",
          "Target Cluster Node (optional)":       "{{ json_response.json.node.name }}",
          "Target Cluster Aggregate":             "{{ json_response.json.name }}",
        }
    name: 'Display Provisioning Placement Informaiton from a given Capacity & Performance Service Level (PSL)'

    #     "Target Vserver Name":                  "{{ svm_json_response.json.name }}"

  #   loop: "{{ get_result.json.records }}"
  #   loop_control:
      # label: "{{ item.name }}"
    # when:  item.system_defined == true