#######################################################
# 
#   Author:     Ken Hillier
#   Date:       24 Oct 24
# 
#   Description:  Playbook that configures ONTAP Select's cluster & SVM.
# 
#   Dependencies:  
# 
#######################################################
---
- name: "ONTAP Cluster Config: {{ cluster_name }}"
  hosts: sandbox
  gather_facts: no
  
  collections:
    - netapp.ontap
  
  module_defaults:
    group/netapp.ontap.netapp_ontap:
      hostname: "{{ netapp_hostname }}"
      username: "{{ netapp_username }}"
      password: "{{ netapp_password }}"
      https: true
      validate_certs: false
      use_rest: always  # Use REST API for all tasks
  
  vars_files:
    - vars/credentials.yml
    - vars/vars_ontap_sandbox.yml
    # - vars/vars_ontap_ontap-cl01.yml
    # - vars/vars_ontap_redshirt.yml

  # vars_prompt:  # For NetApp Admin Credentials
  #   - name: netapp_username
  #     prompt: NetApp 'admin'
  #   - name: netapp_password
  #     prompt: NetApp 'admin' password
  #     private: true
  #     confirm: true
  #     unsafe: false
  #   # For Domain Admin Credentials for CIFS Server creation
  #   - name: admin_username
  #     prompt: AD Domain admin account
  #     default: "administrator"
  #     private: false
  #   - name: admin_password
  #     prompt: AD Domain 'admin' password
  #     private: true
  #     confirm: true
  #     unsafe: false

  vars:
    state: present
    netapp_hostname: "{{ cluster.net.mgmt }}"


  tasks:

    ###
    # Cluster Configuration
    - name: ONTAP Cluster Standard Configuration
      include_role:
        # name: na_ontap_cluster_config
        name: na_ontap_cluster_config_v3

    ###
    # Vserver configuration
    - name: ONTAP Vserver Configuration
      include_role:
        # name: na_ontap_vserver_create
        name: na_ontap_vserver_create_v2

    ###
    # Vserver configuration
    # - name: ONTAP Vserver Configuration
    #   include_role:
    #     name: na_ontap_create_ls_mirrors

    ###
    # Non-Role: Standard Configuration
    # Note:
    ###

    ###
    # timezone

    - name: "Set cluster timezone {{ clus.net.time.zone }}"
      na_ontap_command:
        <<: *login

        command:
          ["cluster", "date", "modify", "-timezone", "{{ clus.net.time.zone }}"]

    ###
    # Set System SNMP Location value
    - name: "Set cluster SNMP Location"
      na_ontap_command:
        <<: *login
        privilege: "advanced"

        command: ["system", "snmp", "location", "-location", "{{ clus.loc }}"]
      when: clus.loc is defined and clus.loc != None

    ###
    # Enable discovery tools for Config Advisor & cluster interconnect switch visibility
    ###

    ###
    # Configure cdpd
    - name: "Enable CDP"
      na_ontap_command:
        <<: *login
        privilege: "advanced"

        command:
          [
            "system",
            "node",
            "run",
            "-node",
            "*",
            "options",
            "cdpd.enable",
            "enable",
          ]

    ###
    # Configure lldp
    - name: "Enable LLDP"
      na_ontap_command:
        <<: *login
        privilege: "advanced"

        command:
          [
            "system",
            "node",
            "run",
            "-node",
            "*",
            "options",
            "lldp.enable",
            "enable",
          ]

    ###
    # Autosupport: Configuration
    # Note: Comment out if using updated role: na_ontap_cluster_config_v2
    ###

    - name: Enable Autosupport Configuration
      na_ontap_autosupport:
        state: present
        node_name: "{{ item.node }}"
        proxy_url: "{{ item.proxy_url | default(omit)  }}"
        transport: "{{ item.transport | default(omit)  }}"
        hostname_in_subject: "{{ item.hostsubj | default('false') }}"
        from_address: "{{ item.from | default(omit)  }}"
        noteto: "{{ item.noteto | default(omit)  }}"
        to_addresses: "{{ item.to | default(omit)  }}"
        partner_addresses: "{{ item.partner | default(omit) }}"
        mail_hosts: "{{ item.mailhosts }}"
        hostname: "{{ netapp_hostname }}"
        username: "{{ netapp_username }}"
        password: "{{ netapp_password }}"
        https: true
        validate_certs: "{{ validate_certs }}"

      with_items: "{{ asup_config }}"

      when: asup_config is defined and asup_config != None

    ###
    # User & Role Configuration
    ###

    # Creates user roles.
    - name: Create User Role
      na_ontap_user_role:
        state: present
        name: "{{ item.name }}"
        command_directory_name: "{{ item.cmddir }}"
        access_level: "{{ item.level }}"
        vserver: "{{ item.svm }}"
        <<: *login
      with_list: "{{ role_cmds }}"
      when: role_cmds is defined and role_cmds != None

    # Creates users.
    - name: Create Users
      na_ontap_user:
        state: present
        name: "{{ item.name }}"
        application: "{{ item.app }}"
        authentication_method: "{{ item.auth }}"
        role_name: "{{ item.role }}"
        vserver: "{{ item.svm }}"
        <<: *login
      with_list: "{{ user_list }}"
      when: user_list is defined and user_list != None

    ###
    # Export-Policies: Create and Manage
    # Note: Comment this out if not needed
    ###

    - name: "Remove default Export-policy entry: RO = ALL"
      na_ontap_export_policy_rule:
        state: absent
        policy_name: default
        vserver: "{{ svm.name }}"
        rule_index: "{{ item.rule_index | default(1) }}"
        <<: *login

    - name: Create SVM Export-policy
      na_ontap_export_policy:
        state: "{{ state }}"
        name: "{{ item.name }}"
        vserver: "{{ item.svm }}"
        <<: *login
      loop: "{{ svm_export_policy_name }}"
      when: svm_export_policy_name is defined and svm_export_policy_name != None

    - name: Setup "Default" and SVM Export-policies
      na_ontap_export_policy_rule:
        state: "{{ state }}"
        policy_name: "{{ item.name }}"
        vserver: "{{ item.svm }}"
        client_match: "{{ item.client_match }}"
        protocol: "{{ item.protocol }}"
        ro_rule: "{{ item.ro_rule }}"
        rw_rule: "{{ item.rw_rule }}"
        rule_index: "{{ item.rule_index | default(omit) }}"
        super_user_security: "{{ item.super_user_security }}"
        <<: *login
      loop: "{{ export_policy_rules_list }}"
      when: export_policy_rules_list is defined and export_policy_rules_list != None






  tasks:

    # - name: Get ONTAP Facts (REST)
    #   netapp.ontap.na_ontap_rest_info:
    #     use_rest: always
    #     gather_subset:
    #       # - all
    #       - demo
    #   register: netapp

    # - name: Print VAR
    #   ansible.builtin.debug: var=netapp

    - import_role:
        name: ots_cluster_config

    - name: "Completed ONTAP Select cluster config: {{ cluster_name }}"
      ansible.builtin.debug:
        msg:
          - "=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-="
          - "=                                                       ="
          - "=              Netapp ONTAP Select                      ="
          - "=          Configuration Complete for:                  ="
          - "=                                                       ="
          - "=          Cluster: {{ cluster_name }}"
          - "=                                                       ="
          - "=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-="

    - import_role:
        name: ots_svm_config

    # - name: "Completed ONTAP Select SVM config: {{ name }}"
    #   ansible.builtin.debug:
    #     msg:
    #       - "=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-="
    #       - "=                                                       ="
    #       - "=              Netapp ONTAP Select                      ="
    #       - "=          Configuration Complete for:                  ="
    #       - "=                                                       ="
    #       - "=          SVM: {{ name }}"
    #       - "=                                                       ="
    #       - "=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-=_=-="

