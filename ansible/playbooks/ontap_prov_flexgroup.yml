###################################################################
# 
#   Author:     Ken Hillier
#   Date:       28 Oct 24
# 
#   Description:  Playbook to Provision an ONTAP Flexgroup.
# 
#   Dependencies:  netapp.ontap 22.8.3
# 
###################################################################
---
- name: NetApp ONTAP Provision NFS FlexGroup
  hosts: ontap
  gather_facts: false
  collections:
    - netapp.ontap
  module_defaults:
    group/netapp.ontap.netapp_ontap:
      hostname: "{{ netapp_hostname }}"
      username: "{{ netapp_username }}"
      password: "{{ netapp_password }}"
      https: true
      validate_certs: false
      use_rest: always
  
  # vars_files:
  #   - ../vars/credentials.yml

  vars:
    netapp_hostname: "{{ cluster.net.mgmt }}"
    https: true
    validate_certs: false
    state: present
    vserver_name: vs0
    volumes:
    - name: flexgroup_01
      size: 3200
      svm: vs0
      auto_provision_as: flexgroup
      protocol: nfs
      aggr_list:
      - "{{ inventory_hostname }}_01_aggr_1"
      - "{{ inventory_hostname }}_01_aggr_2"
      - "{{ inventory_hostname }}_02_aggr_1"
      - "{{ inventory_hostname }}_02_aggr_2"
      aggr_list_multiplier: 4
      analytics: true
      tags: ["volume:flexgroup", "location:ExampleLab", "owner:User1"]

  tasks:

    # - name: Print VAR for Troubleshooting
    #   ansible.builtin.debug: 
    #     msg: 
    #     - "{{ inventory_hostname }}"
    #     - "{{ ansible_host }}"

  - name: Provision NAS '{{ vserver_name }}' FlexGroup Volume
    netapp.ontap.na_ontap_volume:
      state:                  "{{ state }}"
      hostname:               "{{ netapp_hostname }}"
      username:               "{{ netapp_username }}"
      password:               "{{ netapp_password }}"
      https:                  "{{ https }}"
      validate_certs:         "{{ validate_certs }}"
      vserver:                "{{ item.svm }}"
      name:                   "{{ item.name }}"
      size:                   "{{ item.size }}"
      # aggregate_name:         "{{ item.aggr if item.aggr != None else (hostvars[inventory_hostname]['aggrs'] | random).name }}"
      aggr_list:              "{{ item.aggr_list              | default(omit) }}"
      aggr_list_multiplier:    "{{ item.aggr_list_multiplier    | default(omit) }}"
      auto_provision_as:      "{{ item.auto_provision_as      | default(omit) }}"
      size_unit:              "{{ item.size_unit              | default('gb') }}"
      size_change_threshold:  "{{ item.size_change_threshold  | default(10 | int) }}"
      sizing_method:          "{{ item.sizing_method          | default('use_existing_resources') }}"
      junction_path:          "/{{ item.junction_path if item.junction_path is defined and not None else item.name }}"
      user_id:                "{{ item.uid                    | default(0 | int) }}"
      group_id:               "{{ item.gid                    | default(0 | int) }}"
      unix_permissions:       "{{ item.unix_permissions       | default('755') }}"
      volume_security_style:  "{{ item.volume_security_style  | default('unix') }}"
      analytics:              "{{ item.analytics              | default(omit) }}"
      snapdir_access:         "{{ item.snapdir_access         | default('false') }}"
      percent_snapshot_space: "{{ item.percent_snapshot_space | default(5 | int) }}"
      snapshot_policy:        "{{ item.snapshot_policy        | default('default') }}"
      snapshot_auto_delete:   "{{ item.snapshot_auto_delete   | default(omit) }}"
      tiering_policy:         "{{ item.tiering_policy         | default('none') }}"
      export_policy:          "{{ 'default' if item.protocol | lower == 'cifs' else item.export_policy | default('default') }}"
      qos_policy_group:       "{{ item.qos_policy_group       | default(omit) }}"
      qos_adaptive_policy_group: "{{ item.qos_adaptive_policy_group | default(omit) }}"
      efficiency_policy:      "{{ item.efficiency_policy      | default(omit) }}"
      logical_space_enforcement: "{{ item.logical_space_enforcement | default('false') }}"
      logical_space_reporting: "{{ item.logical_space_reporting | default('false') }}"
      # vol_nearly_full_threshold_percent: "{{ item.vol_nearly_full_threshold_percent | default('95') }}"
      # vol_full_threshold_percent: "{{ item.vol_full_threshold_percent | default('98') }}"
      max_files:              "{{ item.max_files              | default(omit) }}"
      encrypt:                "{{ item.encrypt                | default('false') }}"
      space_guarantee:        "{{ item.space_guarantee        | default(omit) }}"
      type:                   "{{ item.type                   | default('RW') }}"
      wait_for_completion:    "{{ item.wait_for_completion    | default(omit) }}"
      tags:                   "{{ item.tags                   | default(omit) }}"
      comment:                "{{ item.comment                | default(omit) }}"
    with_items:
      "{{ volumes }}"

  - name: Provision NAS '{{ vserver_name }}' Volume Autosize
    netapp.ontap.na_ontap_volume_autosize:
      hostname:               "{{ netapp_hostname }}"
      username:               "{{ netapp_username }}"
      password:               "{{ netapp_password }}"
      https:                  "{{ https }}"
      validate_certs:         "{{ validate_certs }}"
      vserver:                "{{ item.svm }}"
      volume:                 "{{ item.name }}"
      mode:                   "{{ item.mode             | default('grow') }}"
      grow_threshold_percent: "{{ item.grow_precent     | default(98 | int) }}"
      maximum_size:           "{{ item.max              | default(omit) }}"
      minimum_size:           "{{ item.min              | default(omit) }}"
      reset:                  "{{ item.reset            | default(omit) }}"
      shrink_threshold_percent: "{{ item.shrink_precent | default(50 | int) }}"
    with_items:
      "{{ volumes }}"
    when: state == "present"